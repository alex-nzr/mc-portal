{"version":3,"file":"index.bundle.js","sources":["../src/scripts/charge-code-selector.js","../src/index.js"],"sourcesContent":["\r\n\r\nexport class ChargeCodeSelector\r\n{\r\n    constructor(options = {}) {\r\n        this.moduleId           = options.moduleId;\r\n        this.providerEntityId   = options.providerEntityId;\r\n        this.providerEntityType = options.providerEntityType;\r\n    }\r\n\r\n    showSelector(userFieldData = {}){\r\n        const fieldName = userFieldData['FIELD_NAME'];\r\n        const isMultiple = (userFieldData['MULTIPLE'] === 'Y');\r\n\r\n        this.tagSelector = new BX.UI.EntitySelector.TagSelector({\r\n            id: `${fieldName}_selector`,\r\n            multiple: isMultiple,\r\n            addButtonCaption: BX.message('SELECT_TEXT'),\r\n            addButtonCaptionMore: isMultiple ? BX.message('MORE_TEXT') : BX.message('CHANGE_TEXT'),\r\n            dialogOptions: {\r\n                context: 'CHARGE_CODE_SELECTOR_CONTEXT',\r\n                entities: [\r\n                    {\r\n                        id           : this.providerEntityId,\r\n                        options      : {},\r\n                        dynamicLoad  : true,\r\n                        dynamicSearch: true,\r\n                    },\r\n                ],\r\n                hideOnSelect:          !isMultiple,\r\n                hideByEsc:             true,\r\n                searchOptions: {\r\n                    allowCreateItem: false,\r\n                    footerOptions: {\r\n                        label: ''\r\n                    }\r\n                },\r\n                footer: BX.create('span', {\r\n                    text: '',\r\n                }),\r\n                events: {}\r\n            },\r\n            events: {\r\n                onAfterTagAdd: (event) => {\r\n                    const {tag} = event.getData();\r\n                    const id = tag.id;\r\n                    const container = BX(userFieldData['CONTAINER_ID']);\r\n                    if (container)\r\n                    {\r\n                        const inputId = isMultiple ? `${fieldName}_add_${id}` : `${fieldName}_add`;\r\n                        let input = BX(inputId);\r\n                        if (input)\r\n                        {\r\n                            input.value = id;\r\n                        }\r\n                        else\r\n                        {\r\n                            input = BX.create('input', {\r\n                                props: {\r\n                                    id: inputId,\r\n                                    value: id,\r\n                                    type: \"hidden\",\r\n                                    name: isMultiple ? `${fieldName}[]` : fieldName,\r\n                                },\r\n                            });\r\n                            container.append(input);\r\n                        }\r\n\r\n                        BX.Crm?.EntityEditor?.getDefault()?.getControlById(fieldName)?.markAsChanged();\r\n                    }\r\n                },\r\n                onAfterTagRemove: function(event) {\r\n                    const {tag} = event.getData();\r\n                    const id = tag.id;\r\n                    const container = BX(userFieldData['CONTAINER_ID']);\r\n                    if (container)\r\n                    {\r\n                        const inputId = isMultiple ? `${fieldName}_add_${id}` : `${fieldName}_add`;\r\n                        const input = BX(inputId);\r\n                        input && (input.value = '');\r\n                        BX.Crm?.EntityEditor?.getDefault()?.getControlById(fieldName)?.markAsChanged();\r\n                    }\r\n                },\r\n            }\r\n        });\r\n\r\n        if(typeof userFieldData['VALUE_ITEMS'] === 'object')\r\n        {\r\n            for(let key in userFieldData['VALUE_ITEMS'])\r\n            {\r\n                const item = userFieldData['VALUE_ITEMS'][key];\r\n                this.tagSelector.addTag({\r\n                    id: item['ID'],\r\n                    entityId: this.providerEntityId,\r\n                    entityType: this.providerEntityType,\r\n                    title: {\r\n                        text: `${item['TITLE']}`,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        this.tagSelector.renderTo(BX(userFieldData['PLACEMENT_ID']));\r\n    }\r\n}\r\n","import {ChargeCodeSelector} from \"./scripts/charge-code-selector\";\r\nimport './styles/style.css';\r\nimport {Extension} from 'main.core';\r\n\r\nBX.ready(() => {\r\n    try\r\n    {\r\n        BX.Cbit.Mc.Expense.ChargeCodeSelector = new ChargeCodeSelector(\r\n            Extension.getSettings('cbit.mc.expense.charge-code-selector')\r\n        );\r\n    }\r\n    catch (e)\r\n    {\r\n        console.log('Expense ChargeCodeSelector error', e)\r\n    }\r\n});"],"names":["ChargeCodeSelector","options","moduleId","providerEntityId","providerEntityType","userFieldData","fieldName","isMultiple","tagSelector","BX","UI","EntitySelector","TagSelector","id","multiple","addButtonCaption","message","addButtonCaptionMore","dialogOptions","context","entities","this","dynamicLoad","dynamicSearch","hideOnSelect","hideByEsc","searchOptions","allowCreateItem","footerOptions","label","footer","create","text","events","onAfterTagAdd","event","getData","tag","container","inputId","input","value","props","type","name","append","Crm","EntityEditor","getDefault","getControlById","markAsChanged","onAfterTagRemove","babelHelpers","key","item","addTag","entityId","entityType","title","renderTo","ready","Cbit","Mc","Expense","Extension","getSettings","e","console","log"],"mappings":"qHAEaA,8BAEGC,yDAAU,4CACbC,SAAqBD,EAAQC,cAC7BC,iBAAqBF,EAAQE,sBAC7BC,mBAAqBH,EAAQG,+FAGzBC,yDAAgB,GACnBC,EAAYD,EAAa,WACzBE,EAA4C,MAA9BF,EAAa,iBAE5BG,YAAc,IAAIC,GAAGC,GAAGC,eAAeC,YAAY,CACpDC,aAAOP,eACPQ,SAAUP,EACVQ,iBAAkBN,GAAGO,QAAQ,eAC7BC,qBAAsBV,EAAaE,GAAGO,QAAQ,aAAeP,GAAGO,QAAQ,eACxEE,cAAe,CACXC,QAAS,+BACTC,SAAU,CACN,CACIP,GAAeQ,KAAKlB,iBACpBF,QAAe,GACfqB,aAAe,EACfC,eAAe,IAGvBC,cAAwBjB,EACxBkB,WAAuB,EACvBC,cAAe,CACXC,iBAAiB,EACjBC,cAAe,CACXC,MAAO,KAGfC,OAAQrB,GAAGsB,OAAO,OAAQ,CACtBC,KAAM,KAEVC,OAAQ,IAEZA,OAAQ,CACJC,cAAe,SAACC,OAENtB,EADQsB,EAAMC,UAAbC,IACQxB,GACTyB,EAAY7B,GAAGJ,EAAa,iBAC9BiC,EACJ,aACUC,EAAUhC,YAAgBD,kBAAiBO,aAAUP,UACvDkC,EAAQ/B,GAAG8B,GACXC,EAEAA,EAAMC,MAAQ5B,GAId2B,EAAQ/B,GAAGsB,OAAO,QAAS,CACvBW,MAAO,CACH7B,GAAI0B,EACJE,MAAO5B,EACP8B,KAAM,SACNC,KAAMrC,YAAgBD,QAAgBA,KAG9CgC,EAAUO,OAAOL,cAGrB/B,GAAGqC,8BAAKC,uCAAcC,uCAAcC,eAAe3C,mBAAY4C,kBAGvEC,iBAAkB,SAAShB,OAEjBtB,EADQsB,EAAMC,UAAbC,IACQxB,MACGJ,GAAGJ,EAAa,cAElC,aACUkC,EAAUhC,YAAgBD,kBAAiBO,aAAUP,UACrDkC,EAAQ/B,GAAG8B,GACjBC,IAAUA,EAAMC,MAAQ,cACxBhC,GAAGqC,8BAAKC,uCAAcC,uCAAcC,eAAe3C,mBAAY4C,qBAMpC,WAAxCE,oBAAO/C,EAAa,iBAEf,IAAIgD,KAAOhD,EAAa,YAC5B,KACUiD,EAAOjD,EAAa,YAAgBgD,QACrC7C,YAAY+C,OAAO,CACpB1C,GAAIyC,EAAI,GACRE,SAAUnC,KAAKlB,iBACfsD,WAAYpC,KAAKjB,mBACjBsD,MAAO,CACH1B,eAASsB,EAAI,eAMxB9C,YAAYmD,SAASlD,GAAGJ,EAAa,wBClGlDI,GAAGmD,OAAM,eAGDnD,GAAGoD,KAAKC,GAAGC,QAAQ/D,mBAAqB,IAAIA,EACxCgE,YAAUC,YAAY,yCAG9B,MAAOC,GAEHC,QAAQC,IAAI,mCAAoCF"}